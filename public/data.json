[
  {
    "id": "0",
    "owner": "Ali",
    "note": "Apply for NOC Silicon Valley to intern in a tech startup. You'll learn loads with the right attitude. Don’t worry if you \"didn't start a business\" or \"don't have entrepreneurship experience\". They love CS students.",
    "date": "2021-05-01 10:10"
  },
  {
    "id": "1",
    "owner": "Adhiraj",
    "note": "Computer Science is not about programming, though they go hand in hand.",
    "date": "2021-05-01 10:10"
  },
  {
    "id": "2",
    "owner": "Ced",
    "note": "Don't be afraid. http://metacog.tumblr.com/post/15889275145/fear-of-programming-stupidity",
    "date": "2021-05-01 10:10"
  },
  {
    "id": "3",
    "owner": "Div",
    "note": "You’re probably not learning as much as you should be",
    "date": "2021-05-01 10:10"
  },
  {
    "id": "4",
    "owner": "Wen Bin",
    "note": "join CCAs, don’t just mug. CAP is not everything.",
    "date": "2021-05-01 10:10"
  },
  {
    "id": "5",
    "owner": "Vaarnan",
    "note": "Be language agnostic. Learn how to self-learn. Also, the curriculum is made for everyone to follow. Learn beyond the course.",
    "date": "2021-05-01 10:10"
  },
  {
    "id": "6",
    "owner": "Frank",
    "note": "Experiment; it’s not expensive to experiment with computers.",
    "date": "2021-05-01 10:10"
  },
  {
    "id": "7",
    "owner": "Laurence",
    "note": "Go out and meet people from industry",
    "date": "2021-05-01 10:10"
  },
  {
    "id": "8",
    "owner": "Jason",
    "note": "Be brave. Read, read and read. Read widely. Don’t just read about computer science stuff. (Derek Sivers, has a very good reading list) Learn at least a new language every year (Or learn 7 Languages in 7 Weeks). Make sure the language messes with the way you normally think about programming. Alan Perlis once said: \"A language that doesn't affect the way you think about programming, is not worth knowing\"",
    "date": "2021-05-01 10:10"
  },
  {
    "id": "9",
    "owner": "Andrew",
    "note": "Make stuff to make your life easier. This works in more ways than one.",
    "date": "2021-05-01 10:10"
  },
  {
    "id": "10",
    "owner": "Silin",
    "note": "don't be intimidated/overwhelmed if you find yourself among the really awesome programmers, especially if you're coming in without any background. do your best to keep up with the lectures, and learn to pick up skills/knowledge outside of school-taught content by doing your own reading",
    "date": "2021-05-01 10:10"
  },
  {
    "id": "11",
    "owner": "Yiping",
    "note": "1. Learn it the hard way. CS people are not meant to write fancy web pages to impress people from business school. Get yourself deep into the technical stuff. A sound foundation in C programming and system architecture are essential. 2. The teaching style in NUS (at least undergraduate courses) is easy to follow but often omits some exciting challenging stuff. Get yourself used to reading the textbooks (not the garbage ones) from cover to cover and to read research papers. 3. If you want to get an admiring CAP, the best way is to forget about your CAP. Choose the courses that appeals to your heart and can help you in your research.",
    "date": "2021-05-01 10:10"
  },
  {
    "id": "12",
    "owner": "Jesmond",
    "note": "Don’t be afraid to challenge yourself. Some of you may be saying to yourself “I have no background” or “The workload of the module seems daunting” but in the end you’re only preventing yourself realising your potential (just to let you know, I had never written a single line of code prior to entering uni and I’m surviving fine). Only through the ‘hardcore’ modules do you learn skills that are practical for real-world use. Have a little confidence in yourself. University is the last place you can make mistakes without reservation before you go out into the working world. Don’t learn what you need to know to pass exams because very quickly that knowledge may become obsolete. Learn how to learn. In computing, it is very hard for you to be able to dig a niche for yourself and get away with it. Technology evolves at a mind-blowing pace and the only way you can keep abreast is if you’re able to evolve with it. Pursue what piques your interest because that’s the only way you’ll be able to keep yourself going once the going gets tough. Learn to read the f***ing documentation. It’s the best way to learn the nuances of a language. And last but not least, Google is your best friend =D",
    "date": "2021-05-01 10:10"
  }
]
