{"version":3,"sources":["components/Search.js","components/AddAdvice.js","components/AdviceInfo.js","components/Footer.js","components/LoadingSpinner.js","App.js","reportWebVitals.js","index.js"],"names":["DropDown","toggle","sortBy","onSortByChange","orderBy","onOrderByChange","className","role","aria-orientation","aria-labelledby","onClick","Search","query","onQueryChange","useState","toggleSort","setToggleSort","htmlFor","type","name","id","value","maxLength","autocomplete","onChange","event","target","placeholder","aria-haspopup","aria-expanded","mySort","AddAdvice","onSendAdvice","clearData","owner","date","note","contact","toggleForm","setToggleForm","formData","setFormData","hasSubmitted","setSubmitted","currentWaitTimeTerm","useRef","rows","required","size","trim","adviceInfo","nanoid","moment","setTimeout","currentTerm","temp","first","second","i","getNextWaitTime","current","disabled","length","AdviceInfo","advice","onDeleteAdvice","format","Footer","shouldShow","href","rel","aria-label","alt","src","LoadingSpinner","process","App","adviceList","setAdviceList","setQuery","setSortBy","setOrderBy","filteredAdvice","filter","item","toLowerCase","includes","sort","a","b","order","isBefore","console","log","fetchData","useCallback","fetch","then","response","json","data","sendData","method","headers","body","JSON","stringify","catch","error","useEffect","myQuery","map","adviceId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a7add8e.chunk.js","sourcesContent":["import { BiSearch, BiCaretDown, BiCheck } from \"react-icons/bi\";\r\nimport { useState } from \"react\";\r\n\r\nconst DropDown = ({ toggle, sortBy, onSortByChange, orderBy, onOrderByChange }) => {\r\n    if (!toggle) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className=\"origin-top-right absolute right-0 mt-2 w-56\r\n      rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\r\n            <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\r\n                <div onClick={() => onSortByChange('owner')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Owner Name  {(sortBy === 'owner') && <BiCheck />}</div>\r\n                <div onClick={() => onSortByChange('length')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Length {(sortBy === 'length') && <BiCheck />}</div>\r\n                <div onClick={() => onSortByChange('date')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-50  hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Date {(sortBy === 'date') && <BiCheck />}</div>\r\n                <div onClick={() => onOrderByChange('asc')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-50  hover:text-gray-900 flex justify-between cursor-pointer border-gray-1 border-t-2\"\r\n                    role=\"menuitem\">Asc {(orderBy === 'asc') && <BiCheck />}</div>\r\n                <div onClick={() => onOrderByChange('desc')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-50  hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Desc {(orderBy === 'desc') && <BiCheck />}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Search = ({ query, onQueryChange, sortBy, onSortByChange, orderBy, onOrderByChange }) => {\r\n    let [toggleSort, setToggleSort] = useState(false);\r\n    return (\r\n        <div className=\"py-5\">\r\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <BiSearch />\r\n                    <label htmlFor=\"query\" className=\"sr-only\" />\r\n                </div>\r\n                <input type=\"text\" name=\"query\" id=\"query\" value={query} maxLength=\"50\"\r\n                    autocomplete=\"off\"\r\n                    onChange={(event) => { onQueryChange(event.target.value) }}\r\n                    className=\"pl-8 py-2 rounded-md focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm  border-gray-300\" placeholder=\"Search\" />\r\n                <div className=\"absolute inset-y-0 right-0 flex items-center\">\r\n                    <div>\r\n                        <button type=\"button\" onClick={() => setToggleSort(!toggleSort)}\r\n                            className=\"justify-center px-4 py-2 bg-sku-darker border-2 border-sku-dark text-sm text-sku-light hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 flex items-center\" id=\"options-menu\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                            Sort By <BiCaretDown className=\"ml-2\" />\r\n                        </button>\r\n                        <DropDown toggle={toggleSort}\r\n                            sortBy={sortBy}\r\n                            onSortByChange={mySort => onSortByChange(mySort)}\r\n                            orderBy={orderBy}\r\n                            onOrderByChange={mySort => onOrderByChange(mySort)} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import { BiDonateHeart } from \"react-icons/bi\";\r\nimport { useRef, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst AddAdvice = ({ onSendAdvice }) => {\r\n    const getNextWaitTime = (currentTerm) => {\r\n        let first = 3;\r\n        let second = 5;\r\n        let temp;\r\n        for (let i = 0; i <= currentTerm; i++) {\r\n            temp = second\r\n            second = first + second\r\n            first = temp\r\n        }\r\n        return second * 1000;\r\n    }\r\n\r\n    const clearData = {\r\n        owner: '',\r\n        date: '',\r\n        note: '',\r\n        contact: '',\r\n    };\r\n    const [toggleForm, setToggleForm] = useState(false);\r\n    const [formData, setFormData] = useState(clearData);\r\n    const [hasSubmitted, setSubmitted] = useState(false);\r\n    const currentWaitTimeTerm = useRef(0);\r\n    const formDataPublish = () => {\r\n        if (formData.note.trim() === \"\" || formData.contact !== \"\" || formData.contact === null) {\r\n            return\r\n        }\r\n        const adviceInfo = {\r\n            id: nanoid(),\r\n            owner: formData.owner.trim() === \"\" ? \"Anonymous\" : formData.owner,\r\n            date: moment(),\r\n            note: formData.note.trim(),\r\n        };\r\n        onSendAdvice(adviceInfo);\r\n        setFormData(clearData);\r\n        setToggleForm(!toggleForm);\r\n        setSubmitted(true);\r\n        setTimeout(() => setSubmitted(false), getNextWaitTime(currentWaitTimeTerm.current++));\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => { setToggleForm(!toggleForm) }}\r\n                className={`bg-sku-darker text-white px-2 py-3 w-full text-left rounded-t-md ${toggleForm ? 'rounded-t-md' : 'rounded-md'}`}>\r\n                <div><BiDonateHeart className=\"inline-block\" />  Donate Your 5 Cents</div>\r\n            </button>\r\n            {\r\n                toggleForm &&\r\n                <div className=\"border-r-2 border-b-2 border-l-2 border-light-blue-500 rounded-b-md pl-4 pr-4 pb-4\">\r\n                    <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                        <label htmlFor=\"owner\" className=\"block text-sm font-medium text-gray-700\">\r\n                            Your Name\r\n          </label>\r\n                        <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                            <input\r\n                                onChange={(event) => { setFormData({ ...formData, owner: event.target.value }) }}\r\n                                value={formData.owner}\r\n                                type=\"text\" name=\"owner\" id=\"owner\"\r\n                                placeholder=\"Only If You Wish To Be Remembered...\"\r\n                                maxLength=\"20\"\r\n                                className=\"px-1 max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-md border-gray-300  rounded-md\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                        <label htmlFor=\"note\" className=\"block text-sm font-medium text-gray-700\">\r\n                            Notes\r\n          </label>\r\n                        <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                            <textarea\r\n                                onChange={(event) => { setFormData({ ...formData, note: event.target.value }) }}\r\n                                value={formData.note}\r\n                                id=\"note\" name=\"note\" rows=\"4\"\r\n                                maxLength=\"1500\"\r\n                                required\r\n                                className=\"px-1 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-md border-gray-300 rounded-md\" placeholder=\"Your Advice Please...\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sm:grid sm:grid-cols-3 invisible sm:gap-4 sm:items-start hidden sm:pt-5\">\r\n                        <label htmlFor=\"contact\" className=\"block text-sm font-medium text-gray-700\">Contact</label>\r\n                        <input id=\"contact\" name=\"contact\" size=\"40\" type=\"text\"\r\n                            value={formData.contact}\r\n                            maxLength=\"10\"\r\n                            onChange={(event) => { setFormData({ ...formData, contact: event.target.value }) }} />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"flex justify-end\">\r\n                            <button\r\n                                onClick={formDataPublish} disabled={hasSubmitted || formData.note.length === 0}\r\n                                type=\"submit\" className={`ml-3 inline-flex justify-center disabled:opacitiy-50 py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md  ${hasSubmitted || formData.note.length === 0 ? \"\" : \"hover:bg-indigo-700\"} focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sku-dark \r\n                                ${formData.note.length > 0 && !hasSubmitted ? \"text-sku-light bg-sku-darker\" : \"text-sku-dark bg-sku-light\"}`}>\r\n                                Submit\r\n            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddAdvice;","import moment from \"moment\";\r\nimport { BiHide } from \"react-icons/bi\"\r\n\r\nconst AdviceInfo = ({ advice, onDeleteAdvice }) => {\r\n    return (\r\n        <li className=\"group hover:bg-sku-light hover:shadow-lg grid grid-cols-1 sm:grid-cols-3 py-4 px-2\">\r\n            <div className=\"max-w-prose text-left sm:col-span-2 overflow-auto\">{advice.note}</div>\r\n            <div className=\"justify-items-end grid items-center content-center\">\r\n                <span>{moment(advice.date).format('LLL')}</span>\r\n                <div><b className=\"font-bold text-sku-darker\">Owner:</b> {advice.owner}</div>\r\n                <button type=\"button\" onClick={() => onDeleteAdvice(advice.id)}\r\n                    className=\"p-1.5 mr-1.5 mt-1 rounded text-white bg-sku-darker hover:bg-sku-light hover:text-sku-darker focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\r\n                    <BiHide /></button>\r\n            </div>\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AdviceInfo;","const Footer = ({ shouldShow }) => {\r\n    return shouldShow && (\r\n        <footer className=\"py-5 bg-sku-light justify-center\">\r\n            <small>Have an awesome enhancement idea ? Contribute & Like on <a className=\"underline\" href=\"https://github.com/tlylt/from-the-future\" rel=\"noopener noreferrer\" target=\"_blank\" aria-label=\"link to github repository\">Github</a></small>\r\n            <img className=\"mx-auto hidden\" alt=\"GitHub Repo stars\" src=\"https://img.shields.io/github/stars/tlylt/from-the-future\" />\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","const LoadingSpinner = ({ shouldShow }) => {\r\n    return shouldShow && (<div className=\"mx-auto w-20 pt-10 h-screen\"><p>Loading...</p><img src={process.env.PUBLIC_URL + \"/spinner.png\"}\r\n        className=\"animate-wiggle\"\r\n        alt=\"spinner\">\r\n    </img></div>);\r\n}\r\n\r\nexport default LoadingSpinner;","import './App.css';\r\nimport Search from './components/Search';\r\nimport AddAdvice from './components/AddAdvice';\r\nimport AdviceInfo from './components/AdviceInfo';\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport Footer from './components/Footer';\r\nimport moment from 'moment';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\n\r\nfunction App() {\r\n  let [adviceList, setAdviceList] = useState([]);\r\n  let [query, setQuery] = useState(\"\");\r\n  let [sortBy, setSortBy] = useState(\"date\");\r\n  let [orderBy, setOrderBy] = useState(\"desc\");\r\n  const filteredAdvice = adviceList.filter(\r\n    item => {\r\n      return (\r\n        item.owner.toLowerCase().includes(query.toLowerCase()) ||\r\n        item.note.toLowerCase().includes(query.toLowerCase())\r\n      )\r\n    }\r\n  ).sort((a, b) => {\r\n    let order = (orderBy === 'asc') ? 1 : -1;\r\n    if (sortBy === \"date\") {\r\n      return moment(a[sortBy] + \"\", \"YYYY-MM-DDTHH:mm:ss.SSSSZ\").isBefore(moment(b[sortBy] + \"\", \"YYYY-MM-DDTHH:mm:ss.SSSSZ\"))\r\n        ? -1 * order : 1 * order;\r\n    } else if (sortBy === \"owner\") {\r\n      return (a[sortBy] + \"\").toLowerCase() < (b[sortBy] + \"\").toLowerCase()\r\n        ? -1 * order : 1 * order;\r\n    } else if (sortBy === \"length\") {\r\n      return a.note.length < b.note.length ? -1 * order : 1 * order;;\r\n    } else {\r\n      console.log(\"Something is wrong\");\r\n      return false;\r\n    }\r\n\r\n  });\r\n\r\n  const fetchData = useCallback(() => {\r\n    fetch('https://hkiq5n.deta.dev/')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setAdviceList(data)\r\n      })\r\n  }, [])\r\n\r\n  const sendData = useCallback((advice) => {\r\n    setAdviceList([\r\n      ...adviceList, advice\r\n    ]);\r\n    fetch('https://hkiq5n.deta.dev/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(advice)\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"Success!\");\r\n      }).catch((error) => {\r\n        console.log(\"Error:\", error);\r\n      });\r\n  }, [adviceList])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <div className=\"bg-sku App container max-w-4xl mx-auto pt-3 px-5 font-note\">\r\n      <h1 className=\"mb-3 text-4xl font-futuristic font-bold\">From The Future</h1>\r\n      <p className=\"pb-2\">Notes to (NUS) Computing Freshmen</p>\r\n      <AddAdvice\r\n        onSendAdvice={(advice) => sendData(advice)}\r\n      />\r\n      <Search query={query} onQueryChange={myQuery => setQuery(myQuery)}\r\n        orderBy={orderBy}\r\n        onOrderByChange={mySort => setOrderBy(mySort)}\r\n        sortBy={sortBy}\r\n        onSortByChange={mySort => setSortBy(mySort)} />\r\n      <LoadingSpinner shouldShow={adviceList.length === 0} />\r\n      <ul className=\"divide-y-2 divide-sku-light\">\r\n        {filteredAdvice.map(advice => (\r\n          <AdviceInfo key={advice.id} advice={advice}\r\n            onDeleteAdvice={\r\n              adviceId => setAdviceList(adviceList.filter(advice => advice.id !== adviceId))\r\n            } />\r\n        ))}\r\n      </ul>\r\n      <Footer shouldShow={adviceList.length !== 0} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}